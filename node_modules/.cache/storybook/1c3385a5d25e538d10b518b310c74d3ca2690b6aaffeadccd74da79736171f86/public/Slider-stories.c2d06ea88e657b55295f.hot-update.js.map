{"version":3,"file":"Slider-stories.c2d06ea88e657b55295f.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAAA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AAIA;AACA;AAIA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA","sources":["webpack://slider-js/./slider-js/src/components/slider/Slider.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Slider.scss';\r\n\r\nconst Slider = ({ type, subtype, steps, handleSize }) => {\r\n  const [value, setValue] = useState(type === 'discrete' ? 0 : 50);\r\n  const [range, setRange] = useState([0, 100]);\r\n\r\n  const handleChange = (event) => {\r\n    const newValue = Number(event.target.value);\r\n    if (subtype === 'range') {\r\n      setRange([newValue, range[1]]);\r\n    } else {\r\n      setValue(newValue);\r\n    }\r\n  };\r\n\r\n  const handleRangeChange = (event, index) => {\r\n    const newValue = Number(event.target.value);\r\n    if (index === 0) {\r\n      setRange([newValue, 100]);\r\n    } else {\r\n      setRange([range[0], newValue]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`slider slider-${handleSize}`}>\r\n      {subtype === 'range' ? (\r\n        <>\r\n          <input\r\n            type=\"range\"\r\n            className=\"slider-input range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n            value={range[0]}\r\n            onChange={(e) => handleRangeChange(e, 0)}\r\n            step={10}\r\n          />\r\n          <div\r\n            className=\"tooltip\"\r\n            style={{ left: `${(range[0] / 100) * 100}%` }}\r\n          >\r\n            {range[0]}\r\n          </div>\r\n          <div\r\n            className=\"tooltip\"\r\n            style={{ left: `${(range[1] / 100) * 100}%` }}\r\n          >\r\n            {range[1]}\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <input\r\n            type=\"range\"\r\n            className={`slider-input ${subtype}`}\r\n            min=\"0\"\r\n            max={type === 'discrete' ? steps : 100}\r\n            value={value}\r\n            onChange={handleChange}\r\n            step={type === 'discrete' ? 1 : undefined}\r\n          />\r\n          <div\r\n            className=\"tooltip\"\r\n            style={{ left: `${(value / (type === 'discrete' ? steps : 100)) * 100}%` }}\r\n          >\r\n            {value}\r\n          </div>\r\n        </>\r\n      )}\r\n      <div className=\"slider-values\">\r\n        {subtype === 'range' ? `${range[0]} - ${range[1]}` : value}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSlider.propTypes = {\r\n  type: PropTypes.oneOf(['continuous', 'discrete']),\r\n  subtype: PropTypes.oneOf(['single', 'range']),\r\n  steps: PropTypes.number,\r\n  handleSize: PropTypes.oneOf(['size_24', 'size_32']),\r\n};\r\n\r\nSlider.defaultProps = {\r\n  type: 'continuous',\r\n  subtype: 'single',\r\n  steps: 10,\r\n  handleSize: 'size_24',\r\n};\r\n\r\nexport default Slider;\r\n"],"names":[],"sourceRoot":""}